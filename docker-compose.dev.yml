version: "3"

services:
  proxy:
    image: nginx:mainline-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - 9000:8000

  frontend:
    build:
      context: frontend

  api: &backend
    build:
      context: backend
    environment:
      DJANGO_SECRET_KEY: development
      DJANGO_DEBUG: "True"
      DJANGO_ALLOWED_HOSTS: "*"
      DJANGO_CORS_ALLOW_ALL_ORIGINS: "True"

      DATABASE_NAME: $DATABASE_NAME
      DATABASE_USER: $DATABASE_USER
      DATABASE_PASSWORD: $DATABASE_PASSWORD
      DATABASE_HOST: $DATABASE_HOST
      DATABASE_PORT: $DATABASE_PORT

      CELERY_BROKER_URL: amqp://admin:password@rabbitmq/nmap
      CELERY_RESULT_BACKEND: redis://redis/0
      CELERY_RESULT_EXPIRES: "30"
    ports:
      - 8000:8000
    volumes:
      - ./backend:/app
    entrypoint: ["sh"]
    command:
      - "-c"
      - "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    restart: on-failure

  worker:
    <<: *backend
    ports: []
    command:
      - "-c"
      - "celery -A config worker -l info"

  database:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: $DATABASE_USER
      POSTGRES_PASSWORD: $DATABASE_PASSWORD
      POSTGRES_DB: $DATABASE_NAME
    volumes:
      - pg_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password
      RABBITMQ_DEFAULT_VHOST: nmap

  redis:
    image: redis:6.0-alpine

volumes:
  pg_data: {}
